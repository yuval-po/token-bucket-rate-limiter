name: token-bucket-rate-limiter


on:
  push:
   paths-ignore:
      - 'package.json'
      - 'CHANGELOG.md'

  pull_request:
    branches:
      - '*'
    paths-ignore:
      - 'package.json'
      - 'CHANGELOG.md'

  pull_request_target:
    branches:
      - '*'
    paths-ignore:
      - 'package.json'
      - 'CHANGELOG.md'


jobs:

  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.6]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install

      - name: Lint
        run: yarn lint

      - name: Test
        run: yarn test

      - name: Block merge on failure
        if: ${{ github.event_name == 'pull_request' && (github.event.pull_request.base.ref == 'master' || github.event.pull_request.base.ref == 'develop') && (failure() || cancelled()) }}
        uses: actions/github-script@v3.3.2
        with:
          script: |
            const { context, github } = require('@actions/github');
            const prNumber = context.payload.pull_request.number;
            github.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              body: '## :x: Failed\nThis pull request cannot be merged until the Lint & Test steps are successful'
            });
            github.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              event: 'REQUEST_CHANGES',
              body: 'This pull request cannot be merged until the Lint & Test steps are successful'
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  cover:
    needs: lint-and-test

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.6]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install node
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Run Coverage
      run: |
        yarn install
        yarn run cover

    - name: Publish to Coveralls
      uses: coverallsapp/github-action@v1.1.2 
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}


  build:
    needs: lint-and-test

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.6]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Build
      run: |
        yarn install
        yarn compile


  changelog:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.6]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - uses: actions/checkout@v2
    - name: Conventional Changelog Action
      uses: TriPSs/conventional-changelog-action@v3
      with:
        github-token: ${{ secrets.github_token }}
        skip-on-empty: false
        git-message: 'Automatic changelog update by Conventional Changelog Action - {version}'